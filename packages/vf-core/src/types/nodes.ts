/*
 * @Author: wuyifan 1208097313@qq.com
 * @Date: 2025-09-22 15:31:00
 * @LastEditors: wuyifan 1208097313@qq.com
 * @LastEditTime: 2025-09-25 17:24:03
 * @FilePath: \vf-studio\packages\vf-core\src\types\nodes.ts
 * Copyright (c) 2024 by wuyifan email: 1208097313@qq.com, All Rights Reserved.
 */
/*
 * @Author: auto-generated by assistant
 */

import { Vector2, Vector3 } from "@vf/math";

enum GNodeType {
    Virtual = 'virtual',
    Curve = 'curve',
    Point = 'point',
    Text = 'text',
    Sprite = 'sprite',
    Group = 'group',
    Mesh = 'mesh',
}


type GVirtualOptions = Record<string, unknown>;

interface GCurveOptions {
    start?: Vector3;
    end?: Vector3;
    controlPoints?: Vector3[];
    segments?: number;
    isClosed?: boolean;
}

interface GPointOptions {
    position?: Vector3;
    size?: number;
}

interface GTextOptions {
    text?: string;
    fontFamily?: string;
    fontSize?: number;
    fontWeight?: number | string;
    depth?: number;
}

interface GSpriteOptions {
    size?: Vector2;
    anchor?: Vector2;
    opacity?: number;
}

interface GMeshOptions {
    vertices?: number[];
    indices?: number[];
    normals?: number[];
    uvs?: number[];
    meta?: Record<string, unknown>;
}

interface IGNodeStyle { 
    mesh?:IMeshStyle;
}

interface IMeshStyle{
    color?:number | string;
    opacity?:number;
    wireframe?:boolean;
    visible?:boolean;
    side?:number;
    type:"basic" | "phong" | "lambert" | "standard" | "normal" | "depth";
}




export {
    GNodeType,
}

export type {
    GMeshOptions,
    GCurveOptions,
    GPointOptions,
    GTextOptions,
    GSpriteOptions,
}


